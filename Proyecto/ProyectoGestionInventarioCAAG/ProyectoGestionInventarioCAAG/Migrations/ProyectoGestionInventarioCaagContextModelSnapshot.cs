// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoGestionInventarioCAAG.Infraestructure.Inventario;

#nullable disable

namespace ProyectoGestionInventarioCAAG.Migrations
{
    [DbContext(typeof(ProyectoGestionInventarioCaagContext))]
    partial class ProyectoGestionInventarioCaagContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("empleadoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("EmpleadoApellido")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("empleadoApellido");

                    b.Property<DateTime?>("EmpleadoFechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("empleadoFechaNacimiento");

                    b.Property<string>("EmpleadoIdentidad")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("empleadoIdentidad");

                    b.Property<string>("EmpleadoNombre")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("empleadoNombre");

                    b.Property<string>("EmpleadoSexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("empleadoSexo");

                    b.Property<string>("EmpleadoTelefono")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("empleadoTelefono");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioCreacion");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("EmpleadoId")
                        .HasName("PK_Empleados_empleadoId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioModificacion");

                    b.HasIndex(new[] { "EmpleadoIdentidad" }, "UQ_Empleados_empleadoIdentidad")
                        .IsUnique()
                        .HasFilter("[empleadoIdentidad] IS NOT NULL");

                    b.ToTable("Empleados", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.EstadosSalida", b =>
                {
                    b.Property<int>("EstadoSalidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("estadoSalidaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoSalidaId"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("EstadoSalidaNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("estadoSalidaNombre");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioCreacion");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("EstadoSalidaId")
                        .HasName("PK_EstadosSalidas_estadoSalidaId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioModificacion");

                    b.HasIndex(new[] { "EstadoSalidaNombre" }, "UQ_EstadosSalidas_estadoSalidaNombre")
                        .IsUnique();

                    b.ToTable("EstadosSalidos", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Lote", b =>
                {
                    b.Property<int>("LoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("loteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoteId"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("LoteCantidad")
                        .HasColumnType("int")
                        .HasColumnName("loteCantidad");

                    b.Property<int?>("LoteCantidadInicial")
                        .HasColumnType("int")
                        .HasColumnName("loteCantidadInicial");

                    b.Property<decimal?>("LoteCostoCantidad")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("loteCostoCantidad");

                    b.Property<DateTime?>("LoteFechaVencimiento")
                        .HasColumnType("date")
                        .HasColumnName("loteFechaVencimiento");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("productoId");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioCreacion");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("LoteId")
                        .HasName("PK_Lotes_loteId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioModificacion");

                    b.ToTable("Lotes", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Perfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("perfilId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilId"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("PerfilNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("perfilNombre");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioCreacion");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("PerfilId")
                        .HasName("PK_Perfiles_perfilId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioModificacion");

                    b.HasIndex(new[] { "PerfilNombre" }, "UQ_Perfiles_perfilNombre")
                        .IsUnique();

                    b.ToTable("Perfiles", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.PerfilesPorPermiso", b =>
                {
                    b.Property<int>("PerfilPorPermisoId")
                        .HasColumnType("int")
                        .HasColumnName("perfilPorPermisoId");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int")
                        .HasColumnName("perfilId");

                    b.Property<int>("PermisoId")
                        .HasColumnType("int")
                        .HasColumnName("permisoId");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioCreacion");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("PerfilPorPermisoId")
                        .HasName("PK_PerfilesPorPermisos_perfilPorPermisoId");

                    b.HasIndex("PerfilId");

                    b.HasIndex("PermisoId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioModificacion");

                    b.ToTable("PerfilesPorPermiso", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Permiso", b =>
                {
                    b.Property<int>("PermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("permisoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermisoId"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("PermisoNombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("permisoNombre");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioCreacion");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("PermisoId")
                        .HasName("PK_Permisos_permisoId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioModificacion");

                    b.ToTable("Permisos", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("productoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductoNombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("productoNombre");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioCreacion");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("ProductoId")
                        .HasName("PK_Productos_productoId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioModificacion");

                    b.ToTable("Productos", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Salida", b =>
                {
                    b.Property<int>("SalidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("salidaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalidaId"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("EstadoSalidaId")
                        .HasColumnType("int")
                        .HasColumnName("estadoSalidaId");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SalidaFecha")
                        .HasColumnType("datetime")
                        .HasColumnName("salidaFecha");

                    b.Property<DateTime?>("SalidaFechaRecibido")
                        .HasColumnType("datetime")
                        .HasColumnName("salidaFechaRecibido");

                    b.Property<decimal?>("SalidaTotal")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("salidaTotal");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int")
                        .HasColumnName("sucursalId");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioCreacion");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuarioId");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("SalidaId")
                        .HasName("PK_Salidas_salidaId");

                    b.HasIndex("EstadoSalidaId");

                    b.HasIndex("SucursalId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioModificacion");

                    b.ToTable("Salidas", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.SalidasDetalle", b =>
                {
                    b.Property<int>("SalidaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("salidaDetalle");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalidaDetalle"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("LoteId")
                        .HasColumnType("int")
                        .HasColumnName("loteId");

                    b.Property<int?>("SalidaDetalleCantidad")
                        .HasColumnType("int")
                        .HasColumnName("salidaDetalleCantidad");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int")
                        .HasColumnName("salidaId");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioCreacion");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("SalidaDetalle")
                        .HasName("PK_SalidasDetalle_salidaDetalle");

                    b.HasIndex("LoteId");

                    b.HasIndex("SalidaId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioModificacion");

                    b.ToTable("SalidasDetalle", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Sucursal", b =>
                {
                    b.Property<int>("SucursalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sucursalId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SucursalId"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("SucursalNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("sucursalNombre");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioCreacion");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("SucursalId")
                        .HasName("PK_Sucursales_sucursalId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioModificacion");

                    b.HasIndex(new[] { "SucursalNombre" }, "UQ_Sucursales_sucursalNombre")
                        .IsUnique();

                    b.ToTable("Sucursales", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usuarioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("empleadoId");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int")
                        .HasColumnName("perfilId");

                    b.Property<string>("UsuarioContrasena")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("usuarioContrasena");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioCreacion");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int")
                        .HasColumnName("usuarioModificacion");

                    b.Property<string>("UsuarioNombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("usuarioNombreUsuario");

                    b.HasKey("UsuarioId")
                        .HasName("PK_Usuarios_usuarioId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("PerfilId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioModificacion");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Empleado", b =>
                {
                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("EmpleadoUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Empleados_usuarioCreacion");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("EmpleadoUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_Empleados_usuarioModificacion");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.EstadosSalida", b =>
                {
                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("EstadosSalidaUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_EstadosSalidas_usuarioCreacion_Usuarios_usuarioId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("EstadosSalidaUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_EstadosSalidas_usuarioModificacion_Usuarios_usuarioId");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Lote", b =>
                {
                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Producto", "Producto")
                        .WithMany("Lotes")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK_Lotes_productoId_Productos_productoId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("LoteUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Lotes_usurioCreacion_Usuarios_usuarioId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("LoteUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_Lotes_usuarioModificacion_Usuarios_usuarioId");

                    b.Navigation("Producto");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Perfil", b =>
                {
                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("PerfileUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Perfiles_usuarioCreacion_Usuarios_usuarioId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("PerfileUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_Perfiles_usuarioModificacion_Usuarios_usuarioId");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.PerfilesPorPermiso", b =>
                {
                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Perfil", "Perfil")
                        .WithMany("PefilesPorPermisos")
                        .HasForeignKey("PerfilId")
                        .IsRequired()
                        .HasConstraintName("FK_PerfilesPorPermisos_perfilId_Perfiles_perfilId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Permiso", "Permiso")
                        .WithMany("PefilesPorPermisos")
                        .HasForeignKey("PermisoId")
                        .IsRequired()
                        .HasConstraintName("FK_PerfilesPorPermisos_permisoId_Permisos_permisoId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("PefilesPorPermisoUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_PerfilesPorPermisos_usuarioCreacion_Usuarios_usuarioId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("PefilesPorPermisoUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_PerfilesPorPermisos_usuarioModificacion_Usuarios_usuarioId");

                    b.Navigation("Perfil");

                    b.Navigation("Permiso");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Permiso", b =>
                {
                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("PermisoUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Permisos_usuarioCreacion_Usuarios_usuarioId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("PermisoUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_Permisos_usuarioModificacion_Usuarios_usuarioId");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Producto", b =>
                {
                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("ProductoUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Productos_usuarioCreacion_Usuarios_usuarioId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("ProductoUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_Productos_usuarioModificacion_Usuarios_usuarioId");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Salida", b =>
                {
                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.EstadosSalida", "EstadoSalida")
                        .WithMany("Salida")
                        .HasForeignKey("EstadoSalidaId")
                        .IsRequired()
                        .HasConstraintName("FK_Salidas_estadoSalidaId_EstadosSalidas_estadoSalidaId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Sucursal", "Sucursal")
                        .WithMany("Salida")
                        .HasForeignKey("SucursalId")
                        .IsRequired()
                        .HasConstraintName("FK_Salidas_sucursalId_Sucursales_sucursalId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("SalidaUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Salidas_usuarioCreacion_Usuarios_usuarioId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "Usuario")
                        .WithMany("SalidaUsuarios")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_Salidas_UsuarioId_Usuarios_usuarioId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("SalidaUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_Salidas_usuarioModificacion_Usuarios_usuarioId");

                    b.Navigation("EstadoSalida");

                    b.Navigation("Sucursal");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.SalidasDetalle", b =>
                {
                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Lote", "Lote")
                        .WithMany("SalidasDetalles")
                        .HasForeignKey("LoteId")
                        .IsRequired()
                        .HasConstraintName("FK_SalidasDetalle_loteId_Lotes_loteId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Salida", "Salida")
                        .WithMany("SalidasDetalles")
                        .HasForeignKey("SalidaId")
                        .IsRequired()
                        .HasConstraintName("FK_SalidasDetalle_salidaId_Salidas_salidaId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("SalidasDetalleUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_salidasDetalle_usuarioCreacion_Usuarios_usuarioId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("SalidasDetalleUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_salidasDetalle_usuarioModificacion_Usuarios_usuarioId");

                    b.Navigation("Lote");

                    b.Navigation("Salida");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Sucursal", b =>
                {
                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("SucursaleUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Sucursales_usuarioCreacion_Usuarios_usuarioId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("SucursaleUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_Sucursales_usuarioModificacion_Usuarios_usuarioId");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", b =>
                {
                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Empleado", "Empleado")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpleadoId")
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_empleadoId_Empleados_empleadoId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilId")
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_perfilId_Perfiles_perfilId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("InverseUsuarioCreacionNavigation")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_usuarioCreacion_Usuarios_usuarioId");

                    b.HasOne("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("InverseUsuarioModificacionNavigation")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_Usuarios_usuarioModificacion_Usuarios_usuarioId");

                    b.Navigation("Empleado");

                    b.Navigation("Perfil");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Empleado", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.EstadosSalida", b =>
                {
                    b.Navigation("Salida");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Lote", b =>
                {
                    b.Navigation("SalidasDetalles");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Perfil", b =>
                {
                    b.Navigation("PefilesPorPermisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Permiso", b =>
                {
                    b.Navigation("PefilesPorPermisos");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Producto", b =>
                {
                    b.Navigation("Lotes");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Salida", b =>
                {
                    b.Navigation("SalidasDetalles");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Sucursal", b =>
                {
                    b.Navigation("Salida");
                });

            modelBuilder.Entity("ProyectoGestionInventarioCAAG.Infraestructure.Inventario.Entities.Usuario", b =>
                {
                    b.Navigation("EmpleadoUsuarioCreacionNavigations");

                    b.Navigation("EmpleadoUsuarioModificacionNavigations");

                    b.Navigation("EstadosSalidaUsuarioCreacionNavigations");

                    b.Navigation("EstadosSalidaUsuarioModificacionNavigations");

                    b.Navigation("InverseUsuarioCreacionNavigation");

                    b.Navigation("InverseUsuarioModificacionNavigation");

                    b.Navigation("LoteUsuarioCreacionNavigations");

                    b.Navigation("LoteUsuarioModificacionNavigations");

                    b.Navigation("PefilesPorPermisoUsuarioCreacionNavigations");

                    b.Navigation("PefilesPorPermisoUsuarioModificacionNavigations");

                    b.Navigation("PerfileUsuarioCreacionNavigations");

                    b.Navigation("PerfileUsuarioModificacionNavigations");

                    b.Navigation("PermisoUsuarioCreacionNavigations");

                    b.Navigation("PermisoUsuarioModificacionNavigations");

                    b.Navigation("ProductoUsuarioCreacionNavigations");

                    b.Navigation("ProductoUsuarioModificacionNavigations");

                    b.Navigation("SalidaUsuarioCreacionNavigations");

                    b.Navigation("SalidaUsuarioModificacionNavigations");

                    b.Navigation("SalidaUsuarios");

                    b.Navigation("SalidasDetalleUsuarioCreacionNavigations");

                    b.Navigation("SalidasDetalleUsuarioModificacionNavigations");

                    b.Navigation("SucursaleUsuarioCreacionNavigations");

                    b.Navigation("SucursaleUsuarioModificacionNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
